openapi: 3.0.1
info:
  title: Capability API
  description: 'Documentation for the Capability api'
  version: 1.0.0
tags:
  - name: capability
  
paths:
  /capability:
    get:
      tags:
        - capability
      summary: finds all capabilities
      description: finds all capabilities
      responses:
        200:
          description: capability found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CreatedCapability"
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Access denied
        404:
          description: Not Found
    post:
      tags:
        - capability
      summary: creates a new capability
      description: creates a new capability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capability'
        required: true
      responses:
        201:
          description: capability created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedCapability"
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Access denied
      
  /capability/{id}:
    get:
      tags:
        - capability
      summary: get a capability by id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the capability
      responses:
        200:
          description: capability found
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/CreatedCapability"
    patch:
      tags:
        - capability
      summary: updates a capability
      description: updates a capability
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the capability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capability'
        required: true
      responses:
        201:
          description: capability updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedCapability"
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Access denied
        404:
          description: Not Found
    delete:
      tags:
        - capability
      summary: deletes a capability
      description: deletes a capability
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the capability
      responses:
        204:
          description: Deleted
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Access denied
        404:
          description: Not Found

          
components:
  schemas:
    CreatedCapability:
      type: object
      allOf:
      - type: object
        properties:
          id:
            type: string
      - $ref: '#/components/schemas/Capability'
    Capability:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: unique
        category:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityCategory'
        maturity:
          type: string
          enum:
          - Ready for Non-Commercial Use
          - Ready for Commerical Use
        domain:
          type: string
          enum:
          - BSS
          - OSS
        3pp:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        productNumber:
          type: string
        beamCompoundSemanticVersion:
          type: string
        minimumSoftwareLevel:
          type: string
        supportingDocuments:
          type: array
          items:
            type: string
    CapabilityCategory:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        responsibleIndividual:
          $ref: '#/components/schemas/ResponsibleIndividual'
    ResponsibleIndividual:
      required:
      - name
      - title
      type: object
      properties:
        title:
          type: string
        name:
          type: string